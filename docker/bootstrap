#!/usr/bin/env bash

# install build dependencies (rustup, ic-wasm and wasi2ic)

set -euo pipefail

SCRIPTS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPTS_DIR/.."

function run() {
    1>&2 echo "running $@"
    rc=0 && "$@" || rc="$?"
    if ! [ "$rc" -eq 0 ]
    then
        1>&2 echo "Bootstrap command failed: $@"
        exit "$rc"
    fi
}

rust_version=$(cat ./rust-toolchain.toml | sed -n 's/^channel[[:space:]]*=[[:space:]]"\(.*\)"/\1/p')
echo "using rust version '$rust_version'"

targets=$(sed -n 's/^targets[[:space:]]*=[[:space:]]\[\(.*\)\]/\1/p' ./rust-toolchain.toml | tr -d '[]" ' | tr ',' ' ')
echo "using rust targets: $targets"

# Install rustup with a toolchain set to 'none'.
# Note: rustup does NOT automatically pick up ./rust-toolchain.toml. We will install and set the correct version afterwards.
# https://blog.rust-lang.org/2025/03/02/Rustup-1.28.0.html
run curl --fail https://sh.rustup.rs -sSf | run sh -s -- -y --default-toolchain "none" --no-modify-path

# Install the effective Rust version
run rustup toolchain install "$rust_version"
run rustup default "$rust_version"

echo "Rust toolchain version $(rustc --version) installed."

# Install Rust targets
for target in $targets; do
    run rustup target add "$target"
done

echo "looking for ic-wasm 0.8.5"
if [[ ! "$(command -v ic-wasm)" || "$(ic-wasm --version)" != "ic-wasm 0.8.5" ]]
then
    echo "installing ic-wasm 0.8.5"
    run cargo install ic-wasm --version 0.8.5 --locked
fi

echo "installing wasi2ic"
if [[ ! "$(command -v wasi2ic)" || "$(wasi2ic --version)" != "wasi2ic 0.2.14" ]]
then
    echo "installing ic-wasm 0.2.14"
    run cargo install wasi2ic --version 0.2.14 --locked
fi

# make sure the packages are actually installed (rustup waits for the first invoke to lazyload)
cargo --version
cargo clippy --version
cargo fmt --version