#!/usr/bin/env bash

set -euo pipefail

# Make sure we always run from the root
SCRIPTS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPTS_DIR/.."

#########
# USAGE #
#########

function title() {
    echo "Build Juno Canister"
}

function usage() {
    cat << EOF

Usage:
  $0 [--only-dependencies] [--mission_control] [--satellite] [--console] [--observatory] [--orbiter] [--test_satellite]

Options:
  --only-dependencies          only build rust dependencies (no js build, no wasm optimization)
  --mission_control            build the mission_control canister (default)
  --satellite                  build the satellite canister
  --console                    build the console canister
  --observatory                build the observatory canister
  --orbiter                    build the orbiter canister
  --test_satellite             build the satellite canister used for testing purposes
EOF
}

function help() {
    cat << EOF

Build the Mission Control, Satellite, Orbiter, Observatory or Console canister.

NOTE: This requires a working rust toolchain as well as ic-wasm.
EOF

}

ONLY_DEPS=
CANISTER=

# Candid metadata supported_certificate_versions 1 and 2
WITH_CERTIFICATION=0
# Candid metadata juno:build
BUILD_TYPE=
# Source directory where to find $CANISTER/Cargo.toml
SRC_ROOT_DIR="$PWD/src"

while [[ $# -gt 0  ]]
do
    case "$1" in
        -h|--help)
            title
            usage
            help
            exit 0
            ;;
        --only-dependencies)
            ONLY_DEPS=1
            shift
            ;;
        --mission_control)
            CANISTER="mission_control"
            break
            ;;
        --satellite)
            CANISTER="satellite"
            WITH_CERTIFICATION=1
            BUILD_TYPE="stock"
            break
            ;;
        --console)
            CANISTER="console"
            WITH_CERTIFICATION=1
            break
            ;;
        --observatory)
            CANISTER="observatory"
            break
            ;;
        --orbiter)
            CANISTER="orbiter"
            break
            ;;
        --test_satellite)
            CANISTER="test_satellite"
            WITH_CERTIFICATION=1
            BUILD_TYPE="extended"
            SRC_ROOT_DIR="$PWD/src/tests/fixtures"
            break
            ;;
        *)
            echo "ERROR: unknown argument $1"
            usage
            echo
            echo "Use 'build --help' for more information"
            exit 1
            ;;
    esac
done

# build Mission Control by default
if [ ${#CANISTER} -eq 0 ]; then
    CANISTER="mission_control"
fi

# Checking for dependencies
if [[ ! "$(command -v ic-wasm)" || "$(ic-wasm --version)" != "ic-wasm 0.8.5" ]]
then
    echo "could not find ic-wasm 0.8.5"
    echo "ic-wasm version 0.8.5 is needed, please run the following command:"
    echo "  cargo install ic-wasm --version 0.8.5"
    exit 1
fi

# Source the script to effectively build the canister
source "$SCRIPTS_DIR/build-canister"

build_canister "$CANISTER" "$SRC_ROOT_DIR" "." "$ONLY_DEPS" "$WITH_CERTIFICATION" "$BUILD_TYPE"